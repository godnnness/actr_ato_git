install.packages("agricolae")
library("agricolae")
x<-seq(0,1, 0.01)
y<-pnorm(x, 0.3, 0.1)
plot(y)
y<-dnorm(x, 0.3, 0.1)
plot(y)
y<-dnorm(x, 0.25, 0.05)
plot(y)
y2 <- dnorm(x, 0.7, 0.2)
plot(y2)
y2 <- dnorm(x, 0.65, 0.2)
plot(y2)
plot(y, type="l", lwd=2, col="red")
plot(y, type="l", lwd=2, col="red", xlab="(/fa/ Perceived Sound /ba/")
plot(y, type="l", lwd=2, col="red", xlab="(/fa/) Perceived Sound (/ba/)")
plot(y, type="l", lwd=2, col="red", xlab="(/fa/)    Perceived Sound     (/ba/)")
plot(y, type="l", lwd=2, col="red", xlab="(/fa/)    Perceived Sound     (/ba/)", ylab="Probability")
lines(y2, col="blue", lwd=2)
y2 <- dnorm(x, 0.7, 0.15)
lines(y2, col="blue", lwd=2)
plot(y, type="l", lwd=2, col="red", xlab="(/fa/)    Perceived Sound     (/ba/)", ylab="Probability")
lines(y2, col="blue", lwd=2)
sd1 = 0.05
s22 = 0.2
w1 = (1/sd1)/(1/sd1 + 1/sd2)
sd2 = 0.2
w1 = (1/sd1)/(1/sd1 + 1/sd2)
w1
w2 = (1/sd2)/(1/sd1 + 1/sd2)
w2
m = w1*0.25 + w2*0.7
m
plot(y, type="l", lwd=2, col="red", xlab="(/fa/)    Perceived Sound     (/ba/)", ylab="Probability", ylim=c(0,10))
lines(y2, col="blue", lwd=2)
1/(1/sd1 + 1/sd2)
cy <- dnorm(x, 0.34, 0.04)
lines(cy, col="black", lwd=2, lty=3)
legend(legend = c("Vision", "Sound", "Combined", pch=NA, lwd=2, lty=c(1,1,3), col=c("red", "blue", "black"))
)
legend(x="topleft", legend = c("Vision", "Sound", "Combined", pch=NA, lwd=2, lty=c(1,1,3), col=c("red", "blue", "black"))
)
legend(x="topleft", legend = c("Vision", "Sound", "Combined"), pch=NA, lwd=2, lty=c(1,1,3), col=c("red", "blue", "black"))
plot(y, type="l", lwd=2, col="red", xlab="(/fa/)    Perceived Sound     (/ba/)", ylab="Probability")
lines(cy, col="black", lwd=2, lty=3)
lines(y2, col="blue", lwd=2)
plot(y, type="l", lwd=2, col="red", xlab="(/fa/)    Perceived Sound     (/ba/)", ylab="Probability", ylim=c(0,10))
lines(cy, col="black", lwd=2, lty=3)
lines(y2, col="blue", lwd=2)
legend(x=80, y=7, legend = c("Vision", "Sound", "Combined"), pch=NA, lwd=2, lty=c(1,1,3), col=c("red", "blue", "black"))
install.packages("MPTinR")
library("MPTinR")
setwd("/actr/models/DRI/data")
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
t.test(ResponseTime ~ Rule, subset(k1, k1$Site == "PMd"), paired=T)
library(power)
library(pwr)
install.package("pwr")
install.packages("pwr")
library(pwr)
t.test(ResponseTime ~ Rule, subset(k1, k1$Site == "PMd"), paired=T)
t.test(ResponseTime ~ Site, subset(k1, k1$Rule == "Symbolic"), paired=T)
t.test(ResponseTime ~ Site, subset(k1, k1$Rule == "Symbolic"), paired=T)
cd <- subset(k1, k1$Rule == "Symbolic")
tapply(cd$ResponseTime, cd$Site, mean)
tapply(cd$ResponseTime, cd$Site, sd)
sds
cd <- subset(k1, k1$Rule == "Symbolic")
ms <- tapply(cd$ResponseTime, cd$Site, mean)
sds <- tapply(cd$ResponseTime, cd$Site, sd)
m <- ms[1] - ms[2]
sds
sds**2
mean(sds**2)
sqrt(mean(sds**2))
cd <- subset(k1, k1$Rule == "Symbolic")
ms <- tapply(cd$ResponseTime, cd$Site, mean)
sds <- tapply(cd$ResponseTime, cd$Site, sd)
m <- ms[1] - ms[2]
sdpooled <- sqrt(mean(sds**2))
m/dpooled
m/sdpooled
pwr.t.test(n=20, 0.05, d=0.83)
pwr.t.test(n=25, 0.05, d=0.83)
pwr.t.test(n=20, 0.05, d=0.83)
pwr.t.test(n=30, 0.05, d=0.79)
pwr.t.test(n=30, 0.05, d=0.78)
pwr.t.test(n=30, 0.05, d=0.7)
pwr.t.test(n=30, 0.05, d=0.75)
pwr.t.test(n=30, 0.05, d=0.74)
pwr.t.test(n=30, 0.05, d=0.74)
pwr.t.test(n=25, 0.05, d=0.74)
pwr.t.test(n=20, 0.05, d=0.74)
pwr.t.test(n=20, 0.05, d=0.74)
pwr.t.test(n=24, 0.05, d=0.74)
install.packages("broom")
install.packages("knirtr")
install.packages("pander")
setwd("/actr/models/DRI/data")
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
megafigure()
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
megafigure()
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
megafigure()
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
megafigure()
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
megafigure()
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
megafigure()
?points
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
megafigure()
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
megafigure()
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
megafigure()
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
megafigure()
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
megafigure()
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
megafigure()
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
megafigure()
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
megafigure()
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
megafigure()
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
megafigure()
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
megafigure()
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
megafigure()
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
megafigure()
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
megafigure()
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
megafigure()
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
megafigure()
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
megafigure()
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
megafigure()
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
megafigure()
?barplot
?legend
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
?legend
megafigure()
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
megafigure()
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
megafigure()
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
megafigure()
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
megafigure()
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
megafigure()
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
megafigure()
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
megafigure()
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
megafigure()
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
megafigure()
?legend
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
?legend
megafigure()
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
megafigure()
?legend
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
megafigure()
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
megafigure()
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
megafigure()
png()
dev.off()
png("newFig.png", res=300, height = 5, width = 2.5, units="in")
megafigure()
dev.off()
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
dev.off()
dev.off()
megafigure()
png("newFig.png", res=300, height = 5, width = 2.5, units="in")
megafigure()
dev.off()
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
dev.off()
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
dim(d)
tapply(data$Accuracy, data$Subject, mean)
mean(tapply(data$Accuracy, data$Subject, mean))
rmse <- function(vec1, vec2) {
sqrt(mean((vec1-vec2)**2))
}
rmse(modelbaseline, modeltms)
enc <- subset(ds, ds$Stimulation == "Early")
ms <- tapply(enc$EncodingTime, list(enc$Rule, enc$Instructed), mean)
rmse(modelencoding, ms)
vex <-subset(ds, ds$Stimulation == "Late" & ds$Site == "Vertex")
ms <- tapply(vex$EncodingTime, list(vex$Rule, vex$Instructed), mean)
rmse(modelbaseline, ms)
pex <-subset(ds, ds$Stimulation == "Late" & ds$Site == "PMd")
ms <- tapply(pex$EncodingTime, list(pex$Rule, pex$Instructed), mean)
rmse(modeltms, ms)
enc <- subset(ds, ds$Stimulation == "Early")
ms <- tapply(enc$EncodingTime, list(enc$Rule, enc$Instructed), mean)
var <- tapply(enc$EncodingTime, list(enc$Rule, enc$Instructed), var)
rmse(modelencoding, ms)
rt.var <- tapply(comp$Latency, list(comp$Condition, comp$Source), var)
X2 <- sum(((ms - modelencoding) ** 2) / (var ** 2))
1 - pchisq(X2,1)
var
ms
modelencoding
vector(ms)
c(ms)
rmse(modelencoding, c(ms))
rt.var <- tapply(comp$Latency, list(comp$Condition, comp$Source), var)
X2 <- sum(((c(ms) - modelencoding) ** 2) / (c(var) ** 2))
1 - pchisq(X2,1)
X2 <- sum(((c(ms) - modelencoding) ** 2) / (c(var) ** 2))
1 - pchisq(X2,1)
X2 <- sum(((c(ms) - modelencoding) ** 2) / (c(var) ** 2))
1 - pchisq(X2,1)
# Vertex Exec times
vex <-subset(ds, ds$Stimulation == "Late" & ds$Site == "Vertex")
ms <- tapply(vex$EncodingTime, list(vex$Rule, vex$Instructed), mean)
var <- tapply(vex$EncodingTime, list(vex$Rule, vex$Instructed), var)
rmse(modelbaseline, c(ms))
X2 <- sum(((c(ms) - modelencoding) ** 2) / (c(var) ** 2))
1 - pchisq(X2,1)
# PMd Exec times
pex <-subset(ds, ds$Stimulation == "Late" & ds$Site == "PMd")
ms <- tapply(pex$EncodingTime, list(pex$Rule, pex$Instructed), mean)
var <- tapply(pex$EncodingTime, list(pex$Rule, pex$Instructed), var)
rmse(modeltms, ms)
X2 <- sum(((c(ms) - modelencoding) ** 2) / (c(var) ** 2))
1 - pchisq(X2,1)
X2 <- sum(((c(ms) - modelbaseline) ** 2) / (c(var) ** 2))
1 - pchisq(X2,1)
vex <-subset(ds, ds$Stimulation == "Late" & ds$Site == "Vertex")
ms <- tapply(vex$EncodingTime, list(vex$Rule, vex$Instructed), mean)
var <- tapply(vex$EncodingTime, list(vex$Rule, vex$Instructed), var)
rmse(modelbaseline, c(ms))
X2 <- sum(((c(ms) - modelbaseline) ** 2) / (c(var) ** 2))
1 - pchisq(X2,1)
pex <-subset(ds, ds$Stimulation == "Late" & ds$Site == "PMd")
ms <- tapply(pex$EncodingTime, list(pex$Rule, pex$Instructed), mean)
var <- tapply(pex$EncodingTime, list(pex$Rule, pex$Instructed), var)
rmse(modeltms, ms)
X2 <- sum(((c(ms) - modeltms) ** 2) / (c(var) ** 2))
1 - pchisq(X2,1)
var
pex
dim(pex)
rmse(modeltms, ms)
X2 <- sum(((c(ms*1000) - modeltms*1000) ** 2) / (c(var*1000) ** 2))
1 - pchisq(X2,1)
X2 <- sum(((c(ms) - modeltms) ** 2) / (c(var) ** 2))
1 - pchisq(X2,1)
X2 <- sum(((c(ms) - modeltms) ** 2) / (c(var) ** 2))
1 - pchisq(X2,3)
X2 <- sum(((c(ms) - modelbaseline) ** 2) / (c(var) ** 2))
1 - pchisq(X2,3)
vex <-subset(ds, ds$Stimulation == "Late" & ds$Site == "Vertex")
ms <- tapply(vex$EncodingTime, list(vex$Rule, vex$Instructed), mean)
var <- tapply(vex$EncodingTime, list(vex$Rule, vex$Instructed), var)
rmse(modelbaseline, c(ms))
X2 <- sum(((c(ms) - modelbaseline) ** 2) / (c(var) ** 2))
1 - pchisq(X2,3)
enc <- subset(ds, ds$Stimulation == "Early")
ms <- tapply(enc$EncodingTime, list(enc$Rule, enc$Instructed), mean)
var <- tapply(enc$EncodingTime, list(enc$Rule, enc$Instructed), var)
rmse(modelencoding, c(ms))
X2 <- sum(((c(ms) - modelencoding) ** 2) / (c(var) ** 2))
1 - pchisq(X2,3)
vex <-subset(ds, ds$Stimulation == "Late" & ds$Site == "Vertex")
ms <- tapply(vex$EncodingTime, list(vex$Rule, vex$Instructed), mean)
var <- tapply(vex$EncodingTime, list(vex$Rule, vex$Instructed), var)
rmse(modelbaseline, c(ms))
X2 <- sum(((c(ms) - modelbaseline) ** 2) / (c(var) ** 2))
1 - pchisq(X2,3)
X2 <- sum(((c(ms) - modeltms) ** 2) / (c(var) ** 2))
1 - pchisq(X2,3)
pex <-subset(ds, ds$Stimulation == "Late" & ds$Site == "PMd")
ms <- tapply(pex$EncodingTime, list(pex$Rule, pex$Instructed), mean)
var <- tapply(pex$EncodingTime, list(pex$Rule, pex$Instructed), var)
rmse(modeltms, ms)
X2 <- sum(((c(ms) - modeltms) ** 2) / (c(var) ** 2))
1 - pchisq(X2,3)
enc <- subset(ds, ds$Stimulation == "Early")
ms <- tapply(enc$EncodingTime, list(enc$Rule, enc$Instructed), mean)
var <- tapply(enc$EncodingTime, list(enc$Rule, enc$Instructed), var)
rmse(modelencoding, c(ms))
X2 <- sum(((c(ms) - modelencoding) ** 2) / (c(var) ** 2))
1 - pchisq(X2,3)
vex <-subset(ds, ds$Stimulation == "Late" & ds$Site == "Vertex")
ms <- tapply(vex$EncodingTime, list(vex$Rule, vex$Instructed), mean)
var <- tapply(vex$EncodingTime, list(vex$Rule, vex$Instructed), var)
rmse(modelbaseline, c(ms))
X2 <- sum(((c(ms) - modelbaseline) ** 2) / (c(var) ** 2))
1 - pchisq(X2,3)
pex <-subset(ds, ds$Stimulation == "Late" & ds$Site == "PMd")
ms <- tapply(pex$EncodingTime, list(pex$Rule, pex$Instructed), mean)
var <- tapply(pex$EncodingTime, list(pex$Rule, pex$Instructed), var)
rmse(modeltms, ms)
X2 <- sum(((c(ms) - modeltms) ** 2) / (c(var) ** 2))
1 - pchisq(X2,3)
pex <-subset(ds, ds$Stimulation == "Late" & ds$Site == "PMd")
ms <- tapply(pex$ExecutionTime, list(pex$Rule, pex$Instructed), mean)
var <- tapply(pex$ExecutionTime, list(pex$Rule, pex$Instructed), var)
rmse(modeltms, ms)
X2 <- sum(((c(ms) - modeltms) ** 2) / (c(var) ** 2))
1 - pchisq(X2,3)
pex <-subset(ds, ds$Stimulation == "Late" & ds$Site == "PMd")
ms <- tapply(pex$ResponseTime, list(pex$Rule, pex$Instructed), mean)
var <- tapply(pex$ResponseTime, list(pex$Rule, pex$Instructed), var)
rmse(modeltms, ms)
X2 <- sum(((c(ms) - modeltms) ** 2) / (c(var) ** 2))
1 - pchisq(X2,3)
vex <-subset(ds, ds$Stimulation == "Late" & ds$Site == "Vertex")
ms <- tapply(vex$ResponseTime, list(vex$Rule, vex$Instructed), mean)
var <- tapply(vex$ResponseTime, list(vex$Rule, vex$Instructed), var)
rmse(modelbaseline, c(ms))
X2 <- sum(((c(ms) - modelbaseline) ** 2) / (c(var) ** 2))
1 - pchisq(X2,3)
enc <- subset(ds, ds$Stimulation == "Early")
ms <- tapply(enc$EncodingTime, list(enc$Rule, enc$Instructed), mean)
var <- tapply(enc$EncodingTime, list(enc$Rule, enc$Instructed), var)
rmse(modelencoding, c(ms))
X2 <- sum(((c(ms) - modelencoding) ** 2) / (c(var) ** 2))
1 - pchisq(X2,3)
X2
vex <-subset(ds, ds$Stimulation == "Late" & ds$Site == "Vertex")
ms <- tapply(vex$ResponseTime, list(vex$Rule, vex$Instructed), mean)
var <- tapply(vex$ResponseTime, list(vex$Rule, vex$Instructed), var)
rmse(modelbaseline, c(ms))
X2 <- sum(((c(ms) - modelbaseline) ** 2) / (c(var) ** 2))
1 - pchisq(X2,3)
X2
pex <-subset(ds, ds$Stimulation == "Late" & ds$Site == "PMd")
ms <- tapply(pex$ResponseTime, list(pex$Rule, pex$Instructed), mean)
var <- tapply(pex$ResponseTime, list(pex$Rule, pex$Instructed), var)
rmse(modeltms, ms)
X2 <- sum(((c(ms) - modeltms) ** 2) / (c(var) ** 2))
1 - pchisq(X2,3)
X2
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
megafigure()
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
megafigure()
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
megafigure()
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
megafigure()
all_model <- c(modelencoding, modelbaseline, modeltms)
all_data <- c(c(encms), c(basems), c(tmsms))
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
all_data
cor.test(all_model, all_data)
cor(all_model, all_data)
cor(all_model, all_data)**2
rmse(all_model, all_da)
rmse(all_model, all_data)
all_var <- c(c(encvar), c(basevar), c(tmsvar))
X2 <- sum(((c(all_data) - all_model) ** 2) / (c(all_var) ** 2))
1 - pchisq(X2,3)
X2 <- sum(((c(all_data) - all_model) ** 2) / (c(all_var) ** 2))
1 - pchisq(X2,12)
X2 <- sum(((c(all_data) - all_model) ** 2) / (c(all_var) ** 2))
1 - pchisq(X2,11)
